=================================================
Principa1.java: Vector estatico tipos primitivos.

Enteros: byte, short, int, long
Reales: double, float
Caracter: char
Lógico: true, false

=================================================
Principal2.java: Vectores dinámicos.


=================================================
Principal3.java: Expresiones regulares
Números enteros de uno a mas digitos
[0-9]+   Ejemplos: 256787, 9, 32, 344, 4394, 412323, 284839202

Nombres que sólo acepte el alfabeto
[a-zA-ZñÑáéíóú]+

Que reconozca reales necesariamente con punto decimal 1.4, 23.733, 0.5, 2345.333
[0-9]+\\.[0-9]+

Tanto punto decimal como enteros sin punto decimal
[0-9]+\\.[0-9]+|[0-9]+  

Deseo números enteros sólo de 3 digitos
[0-9]{3}          134, 345, 999,  22(Error)
  
Deseo números enteros mínimo 1 digito y máximo 3 dígitos
[0-9]{1,3}        5, 33, 344,  4444(Error)

Para un DNI
[0-9]{8}[TNAB]

Necesito cadenas de cero a mas letras
[a-zA-Z]*   cero letras, a, sd  
[a-zA-Z]+    a, df



=================================================

Encriptador.java

Crear una clase que llamaremos "Cripto".
Implemente para esta clase un método static  que llamara asi:

public static String  monoGene(String cad)

que recibirá una cadena y devolverá  la cadena pero encriptada utilizando
la técnica llamada "monoalfabetico general" que se explica a continuación.

SUSTITUIR = 'A','B','C','D','E','F','G','H','I','J','K','L','M','N','Ñ','O','P','Q','R','S','T','U','V','W','X','Y','Z'
POR       = 'Z','C','Q','V','A','J','G','Ñ','W','N','F','B','U','M','R','H','I','O','D','Y','X','T','P','E','S','L','K'
   
 
HOLA ---> ÑHBZ   Encriptar

ÑHBZ ---> HOLA   Desencriptar
=======================
MOSTRAR TODOS LOS NUMEROS PERFECTOS ENTRE EL RANGO [1,100]

